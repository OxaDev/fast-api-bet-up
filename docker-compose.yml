version: "3.9"

services:
  db:
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    command: ["redis-server", "--requirepass", "${REDIS_MAIN_PASSWORD}"]
    environment:
      REDIS_PASSWORD: ${REDIS_MAIN_PASSWORD}
      REDIS_PORT: ${REDIS_MAIN_PORT}
    ports:
      - "6379:6379"
  
  api:
    build:
      context: .
    env_file: .env
    environment:
      POSTGRES_ENDPOINT: db
      REDIS_MAIN_ENDPOINT: redis
      APP_ENV: ${APP_ENV:-production}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    restart: unless-stopped
    command: ["uvicorn", "core.main:app", "--host", "0.0.0.0", "--port", "8000"]

  worker:
    build: .
    env_file: .env
    environment:
      REDIS_MAIN_ENDPOINT: redis
    command: ["celery", "-A", "core.celery.connectors:celery_main_app", "worker", "-Q", "default", "--loglevel=info"]
    depends_on:
      - redis
      - api

volumes:
  dbdata: